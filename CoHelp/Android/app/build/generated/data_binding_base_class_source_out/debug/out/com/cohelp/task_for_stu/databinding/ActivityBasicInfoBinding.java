// Generated by view binder compiler. Do not edit!
package com.cohelp.task_for_stu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cohelp.task_for_stu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBasicInfoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView idIvIcon;

  @NonNull
  public final LinearLayout idLlMyQuestion;

  @NonNull
  public final LinearLayout idLlMyTask;

  @NonNull
  public final LinearLayout idLlQuestionCenter;

  @NonNull
  public final LinearLayout idLlTaskCenter;

  @NonNull
  public final LinearLayout idLlUserCenter;

  @NonNull
  public final ImageView idQs;

  @NonNull
  public final ImageView idTk;

  @NonNull
  public final TextView idTvBrowsingHistory;

  @NonNull
  public final TextView idTvGrade;

  @NonNull
  public final TextView idTvId;

  @NonNull
  public final TextView idTvLogout;

  @NonNull
  public final TextView idTvNickname;

  private ActivityBasicInfoBinding(@NonNull LinearLayout rootView, @NonNull ImageView idIvIcon,
      @NonNull LinearLayout idLlMyQuestion, @NonNull LinearLayout idLlMyTask,
      @NonNull LinearLayout idLlQuestionCenter, @NonNull LinearLayout idLlTaskCenter,
      @NonNull LinearLayout idLlUserCenter, @NonNull ImageView idQs, @NonNull ImageView idTk,
      @NonNull TextView idTvBrowsingHistory, @NonNull TextView idTvGrade, @NonNull TextView idTvId,
      @NonNull TextView idTvLogout, @NonNull TextView idTvNickname) {
    this.rootView = rootView;
    this.idIvIcon = idIvIcon;
    this.idLlMyQuestion = idLlMyQuestion;
    this.idLlMyTask = idLlMyTask;
    this.idLlQuestionCenter = idLlQuestionCenter;
    this.idLlTaskCenter = idLlTaskCenter;
    this.idLlUserCenter = idLlUserCenter;
    this.idQs = idQs;
    this.idTk = idTk;
    this.idTvBrowsingHistory = idTvBrowsingHistory;
    this.idTvGrade = idTvGrade;
    this.idTvId = idTvId;
    this.idTvLogout = idTvLogout;
    this.idTvNickname = idTvNickname;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBasicInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBasicInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_basic_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBasicInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_iv_icon;
      ImageView idIvIcon = ViewBindings.findChildViewById(rootView, id);
      if (idIvIcon == null) {
        break missingId;
      }

      id = R.id.id_ll_myQuestion;
      LinearLayout idLlMyQuestion = ViewBindings.findChildViewById(rootView, id);
      if (idLlMyQuestion == null) {
        break missingId;
      }

      id = R.id.id_ll_myTask;
      LinearLayout idLlMyTask = ViewBindings.findChildViewById(rootView, id);
      if (idLlMyTask == null) {
        break missingId;
      }

      id = R.id.id_ll_questionCenter;
      LinearLayout idLlQuestionCenter = ViewBindings.findChildViewById(rootView, id);
      if (idLlQuestionCenter == null) {
        break missingId;
      }

      id = R.id.id_ll_taskCenter;
      LinearLayout idLlTaskCenter = ViewBindings.findChildViewById(rootView, id);
      if (idLlTaskCenter == null) {
        break missingId;
      }

      id = R.id.id_ll_userCenter;
      LinearLayout idLlUserCenter = ViewBindings.findChildViewById(rootView, id);
      if (idLlUserCenter == null) {
        break missingId;
      }

      id = R.id.id_qs;
      ImageView idQs = ViewBindings.findChildViewById(rootView, id);
      if (idQs == null) {
        break missingId;
      }

      id = R.id.id_tk;
      ImageView idTk = ViewBindings.findChildViewById(rootView, id);
      if (idTk == null) {
        break missingId;
      }

      id = R.id.id_tv_browsing_history;
      TextView idTvBrowsingHistory = ViewBindings.findChildViewById(rootView, id);
      if (idTvBrowsingHistory == null) {
        break missingId;
      }

      id = R.id.id_tv_grade;
      TextView idTvGrade = ViewBindings.findChildViewById(rootView, id);
      if (idTvGrade == null) {
        break missingId;
      }

      id = R.id.id_tv_id;
      TextView idTvId = ViewBindings.findChildViewById(rootView, id);
      if (idTvId == null) {
        break missingId;
      }

      id = R.id.id_tv_logout;
      TextView idTvLogout = ViewBindings.findChildViewById(rootView, id);
      if (idTvLogout == null) {
        break missingId;
      }

      id = R.id.id_tv_nickname;
      TextView idTvNickname = ViewBindings.findChildViewById(rootView, id);
      if (idTvNickname == null) {
        break missingId;
      }

      return new ActivityBasicInfoBinding((LinearLayout) rootView, idIvIcon, idLlMyQuestion,
          idLlMyTask, idLlQuestionCenter, idLlTaskCenter, idLlUserCenter, idQs, idTk,
          idTvBrowsingHistory, idTvGrade, idTvId, idTvLogout, idTvNickname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
