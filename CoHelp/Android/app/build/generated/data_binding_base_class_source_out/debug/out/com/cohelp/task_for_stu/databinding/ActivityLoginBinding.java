// Generated by view binder compiler. Do not edit!
package com.cohelp.task_for_stu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cohelp.task_for_stu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button idBtnLogin;

  @NonNull
  public final EditText idEtPassword;

  @NonNull
  public final EditText idEtUsername;

  @NonNull
  public final TextView idTvFound;

  @NonNull
  public final TextView idTvRegister;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull Button idBtnLogin,
      @NonNull EditText idEtPassword, @NonNull EditText idEtUsername, @NonNull TextView idTvFound,
      @NonNull TextView idTvRegister) {
    this.rootView = rootView;
    this.idBtnLogin = idBtnLogin;
    this.idEtPassword = idEtPassword;
    this.idEtUsername = idEtUsername;
    this.idTvFound = idTvFound;
    this.idTvRegister = idTvRegister;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_btn_login;
      Button idBtnLogin = ViewBindings.findChildViewById(rootView, id);
      if (idBtnLogin == null) {
        break missingId;
      }

      id = R.id.id_et_password;
      EditText idEtPassword = ViewBindings.findChildViewById(rootView, id);
      if (idEtPassword == null) {
        break missingId;
      }

      id = R.id.id_et_username;
      EditText idEtUsername = ViewBindings.findChildViewById(rootView, id);
      if (idEtUsername == null) {
        break missingId;
      }

      id = R.id.id_tv_found;
      TextView idTvFound = ViewBindings.findChildViewById(rootView, id);
      if (idTvFound == null) {
        break missingId;
      }

      id = R.id.id_tv_register;
      TextView idTvRegister = ViewBindings.findChildViewById(rootView, id);
      if (idTvRegister == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, idBtnLogin, idEtPassword,
          idEtUsername, idTvFound, idTvRegister);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
