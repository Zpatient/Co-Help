// Generated by view binder compiler. Do not edit!
package com.cohelp.task_for_stu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cohelp.task_for_stu.R;
import com.cohelp.task_for_stu.ui.view.SwipeRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityManagerTaskCenterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText idEtSearch;

  @NonNull
  public final ImageView idIvSearch;

  @NonNull
  public final RecyclerView idRecyclerview;

  @NonNull
  public final SwipeRefreshLayout idSwiperefresh;

  @NonNull
  public final TextView idTvAll;

  @NonNull
  public final TextView idTvHasPass;

  @NonNull
  public final TextView idTvWaitPass;

  private ActivityManagerTaskCenterBinding(@NonNull LinearLayout rootView,
      @NonNull EditText idEtSearch, @NonNull ImageView idIvSearch,
      @NonNull RecyclerView idRecyclerview, @NonNull SwipeRefreshLayout idSwiperefresh,
      @NonNull TextView idTvAll, @NonNull TextView idTvHasPass, @NonNull TextView idTvWaitPass) {
    this.rootView = rootView;
    this.idEtSearch = idEtSearch;
    this.idIvSearch = idIvSearch;
    this.idRecyclerview = idRecyclerview;
    this.idSwiperefresh = idSwiperefresh;
    this.idTvAll = idTvAll;
    this.idTvHasPass = idTvHasPass;
    this.idTvWaitPass = idTvWaitPass;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityManagerTaskCenterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityManagerTaskCenterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_manager_task_center, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityManagerTaskCenterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.id_et_search;
      EditText idEtSearch = ViewBindings.findChildViewById(rootView, id);
      if (idEtSearch == null) {
        break missingId;
      }

      id = R.id.id_iv_search;
      ImageView idIvSearch = ViewBindings.findChildViewById(rootView, id);
      if (idIvSearch == null) {
        break missingId;
      }

      id = R.id.id_recyclerview;
      RecyclerView idRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (idRecyclerview == null) {
        break missingId;
      }

      id = R.id.id_swiperefresh;
      SwipeRefreshLayout idSwiperefresh = ViewBindings.findChildViewById(rootView, id);
      if (idSwiperefresh == null) {
        break missingId;
      }

      id = R.id.id_tv_all;
      TextView idTvAll = ViewBindings.findChildViewById(rootView, id);
      if (idTvAll == null) {
        break missingId;
      }

      id = R.id.id_tv_hasPass;
      TextView idTvHasPass = ViewBindings.findChildViewById(rootView, id);
      if (idTvHasPass == null) {
        break missingId;
      }

      id = R.id.id_tv_waitPass;
      TextView idTvWaitPass = ViewBindings.findChildViewById(rootView, id);
      if (idTvWaitPass == null) {
        break missingId;
      }

      return new ActivityManagerTaskCenterBinding((LinearLayout) rootView, idEtSearch, idIvSearch,
          idRecyclerview, idSwiperefresh, idTvAll, idTvHasPass, idTvWaitPass);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
